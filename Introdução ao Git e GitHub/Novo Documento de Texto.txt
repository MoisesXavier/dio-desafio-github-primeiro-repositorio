# Comandos Básicos - Trabalhando com o Git bash:

### Abaixo falaremos de todos os comando básico, entretanto já é o suficiente para começar a trabalhar com o GIT/GITHUB.


## No terminal:

$ pwd -> mostra o caminho completo do diretorio no qual estamos dentro;
$ ls -> lista tudo que está dentro da pasta/repositório no qual estamos dentro (exceto os arquivos/pastas oucultas);
$ ls -a -> lista arqvuivos/pastas ocultas;
$ clear -> limpa toda tela que estamos trabalhando, também podemos usar o atalho do teclado (Ctrl+l);

## Trabalhando com pasta/arquivos:

$ cd.. -> retroceder apenas um nível de pasta;
$ cd + / -> nos leva para diretório base;
$ cd + esapaço + "nome da pasta" -> entra em um pasta, que tem dentro da pasta/repositório que estamos;
$ mkdir + esapaço + "nome da pasta" -> cria uma pasta; 
$ rmdir + "nome da pasta" /S /Q -> remove toda pasta/repositório com tudo que está dentro;
$ rm + "nome da pasta.extensão" -> remover o arquivo especificado;
$ echo + "algo" -> imprime algo na tela;
$ echo + > + "nome_do_arquivo.txt" -> cria um arquivo(lembresse de passar a extensão do arquivo que você vai criar);
del - para deletar os arquivos dentro de uma pasta





*********************** trabalhar para baixo ***********************************************************

cat - comando especial para ler o conteudo de uma chave SSH


para inicializar a entidade ssh-agent, entidade que fica responsável por pegar as chaves e lidar com elas:
$ eval $(ssh-agent -s)
----saida
Agent pid 924

agora vamos passar a chave apara o SSH-AGENT:
$ ssh-add id_ed25519
---saida
Enter passphrase for id_ed25519: ----confirma a senha criada
---nova saida
Identity added: id_ed25519 (mxs2003@gmail.com)



''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

$ mv receita.md ./receitas/ - mv(move) o arquivo "receita.md" para pasta "./receitas/"

$git init - para o git começar a versionar nosso código

$ git config --global user.email "mxs2003@gmail.com" - para setar as gonfigurações de forma global
$ git config --global user.name "Mxs"

---- após alternar/para de trabalhar no código 

$ git add *

$ git commit -m "commit inicial"
---- saida ---
[master (root-commit) e7f737b] commit inicial
 1 file changed, 19 insertions(+)
 create mode 100644 receita.md


$ git status

$ git add receita.md receitas/ - add um arquivo e uma pasta que cabamos de modificar/criar

$ git commit -m "cria pasta receitas, move arquivo para receitas"
[master ed7b118] cria pasta receitas, move arquivo para receitas
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename receita.md => receitas/receita.md (100%)

$ git add * - adiciona todos os arquivos, pastas, modificações para área de unistage para ser commitados
$ git add . - adiciona todos os arquivos, pastas, modificações para área de unistage para ser commitados

$ git config --list - vai trazer toda a lista de configuração que está no seu git

para reconfigurar, para apagar as configurações feitas anteriormente

$ git config --global --unset user.email - apaga o e-mail, precisa refazer a config

$ git config --global --unset user.name - apaga o nick-name, precisa refazer a config

após criar um repositório online no site da github, precisamos apontar em nosso git bash:
"informações do site github"
…or push an existing repository from the command line
git remote add origin git@github.com:MoisesXavier/Livro-Receitas.git
git branch -M main
git push -u origin main
...

1º precisamos adicionar a origem REMOTO:
git remote add origin git@github.com:MoisesXavier/Livro-Receitas.git


comando para verificar se tenho alguma origem cadastrada no git
$ git remote -v

---saida------

origin  git@github.com:MoisesXavier/Livro-Receitas.git (fetch)
origin  git@github.com:MoisesXavier/Livro-Receitas.git (push)

2º para empurrar minha versão apara o github
$ git push origin master
Enter passphrase for key '/c/Users/Mxs_Desk/.ssh/id_ed25519':
--note que irá pedir a senha que vc cadastrou quando instalou o git

---saida
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (8/8), 827 bytes | 63.00 KiB/s, done.
Total 8 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:MoisesXavier/Livro-Receitas.git
 * [new branch]      master -> master

***************************************************************************
são objetos responsaveis pelo versionamentos do nosso código
Objetos fundamentais do GIT:
objetos internos do GIT;
** BLOBS - os arquivos fica dentro dos objetos chamados BLOB e dentro do BLOB contém metadados: o tipo de objeto BLOB, o tamanho da string ou do arquivo, uma "barra contrária com o zero" \0 e o conteudo de fato do arquivo ou da string;
Exemplos:
$ echo 'conteudo' | git hash-object --stdin
fc31e91b26cf85a55e072476de7f263c89260eb1

$ echo -e 'blob 9\0conteudo' | openssl sha1
(stdin)= fc31e91b26cf85a55e072476de7f263c89260eb1

** TREES - são as arvores, TREE (objeto recursivos) armazena \0 , aponta para o BLOB, sha1 do BLOBs e o aquivo do blob.  
** COMMITS - aponta para TREE




**************************************************************************
Chaves SSH e Tokens

para criar as chaves SSH

$ ssh-keygen -t ed25519 -C mxs2003@gmail.com

-- saida
Generating public/private ed25519 key pair.
Enter file in which to save the key (/c/Users/Mxs_Desk/.ssh/id_ed25519):

--- apetar enter --- nova saida
Created directory '/c/Users/Mxs_Desk/.ssh'.
Enter passphrase (empty for no passphrase): --- criar senha
Enter same passphrase again: --- confirmar senha


--- apetar enter --- nova saida
Your identification has been saved in /c/Users/Mxs_Desk/.ssh/id_ed25519
Your public key has been saved in /c/Users/Mxs_Desk/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:QhGsbRekf4a6ZPTBF2Hs4FuZn/w+TkLNBABNoeiZRvk mxs2003@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|     .ooo=*o.    |
|      .=ooo. .   |
|     o*..+.o  .  |
|    .+o*o.=. +   |
|     .B.Eo+o..o  |
|     o +.= .+    |
|      + .   ...  |
|     o .     oo  |
|      .      oo. |
+----[SHA256]-----+






